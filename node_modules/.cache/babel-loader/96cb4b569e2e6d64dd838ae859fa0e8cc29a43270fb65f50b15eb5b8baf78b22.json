{"ast":null,"code":"var _jsxFileName = \"/Users/benjamingreenfield/Documents/react/lights-out/src/Cell.js\";\nimport React from \"react\";\nimport \"./Cell.css\";\n\n/** A single cell on the board.\n *\n * This has no state --- just two props:\n *\n * - flipCellsAroundMe: a function rec'd from the board which flips this\n *      cell and the cells around of it\n *\n * - isLit: boolean, is this cell lit?\n *\n * This handles clicks --- by calling flipCellsAroundMe\n *\n **/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Cell(_ref) {\n  let {\n    flipCellsAroundMe,\n    isLit,\n    colIdx,\n    curr\n  } = _ref;\n  const classes = `Cell ${isLit ? \"Cell-lit\" : \"\"}`;\n  function handleClickFLip(e) {\n    let row = e.target.parentElement.getAttribute(\"data-rowIdx\");\n    let col = e.target.getAttribute(\"data-colIdx\");\n    flipCellsAroundMe(col, row);\n  }\n  return /*#__PURE__*/_jsxDEV(\"td\", {\n    className: classes,\n    onClick: flipCellsAroundMe,\n    \"data-colIdx\": colIdx\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 10\n  }, this);\n}\n_c = Cell;\nexport default Cell;\nvar _c;\n$RefreshReg$(_c, \"Cell\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Cell","_ref","flipCellsAroundMe","isLit","colIdx","curr","classes","handleClickFLip","e","row","target","parentElement","getAttribute","col","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/benjamingreenfield/Documents/react/lights-out/src/Cell.js"],"sourcesContent":["import React from \"react\";\nimport \"./Cell.css\";\n\n/** A single cell on the board.\n *\n * This has no state --- just two props:\n *\n * - flipCellsAroundMe: a function rec'd from the board which flips this\n *      cell and the cells around of it\n *\n * - isLit: boolean, is this cell lit?\n *\n * This handles clicks --- by calling flipCellsAroundMe\n *\n **/\n\nfunction Cell({ flipCellsAroundMe, isLit, colIdx, curr}) {\n  const classes = `Cell ${isLit ? \"Cell-lit\" : \"\"}`;\n  function handleClickFLip(e){\n    let row = e.target.parentElement.getAttribute(\"data-rowIdx\")\n    let col = e.target.getAttribute(\"data-colIdx\")\n    flipCellsAroundMe(col, row, )\n  }\n  return <td className={classes} onClick={flipCellsAroundMe} data-colIdx = {colIdx} />;\n}\n\nexport default Cell;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,YAAY;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA,SAAAC,MAAA,IAAAC,OAAA;AAaA,SAASC,IAAIA,CAAAC,IAAA,EAA4C;EAAA,IAA3C;IAAEC,iBAAiB;IAAEC,KAAK;IAAEC,MAAM;IAAEC;EAAI,CAAC,GAAAJ,IAAA;EACrD,MAAMK,OAAO,GAAI,QAAOH,KAAK,GAAG,UAAU,GAAG,EAAG,EAAC;EACjD,SAASI,eAAeA,CAACC,CAAC,EAAC;IACzB,IAAIC,GAAG,GAAGD,CAAC,CAACE,MAAM,CAACC,aAAa,CAACC,YAAY,CAAC,aAAa,CAAC;IAC5D,IAAIC,GAAG,GAAGL,CAAC,CAACE,MAAM,CAACE,YAAY,CAAC,aAAa,CAAC;IAC9CV,iBAAiB,CAACW,GAAG,EAAEJ,GAAK,CAAC;EAC/B;EACA,oBAAOV,OAAA;IAAIe,SAAS,EAAER,OAAQ;IAACS,OAAO,EAAEb,iBAAkB;IAAC,eAAeE;EAAO;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACtF;AAACC,EAAA,GARQpB,IAAI;AAUb,eAAeA,IAAI;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}